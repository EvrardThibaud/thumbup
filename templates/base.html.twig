<!DOCTYPE html>
<html data-bs-theme="dark">
  <head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5/dist/css/bootstrap.min.css" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5/dist/js/bootstrap.bundle.min.js"></script>
    <meta charset="UTF-8">
    <title>{% block title %}Welcome!{% endblock %}</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>‚ö´Ô∏è</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">
    {% block stylesheets %}{% endblock %}
    {% block javascripts %}
      {% block importmap %}{{ importmap('app') }}{% endblock %}
    {% endblock %}
  </head>
  <body>
    <nav class="navbar navbar-expand bg-body-tertiary border-bottom">
    <div class="container-fluid">
        <a class="navbar-brand fw-semibold" href="{{ path('admin_home') }}">üëç ThumbUp</a>

        <div class="navbar-nav">
        {# Liens ADMIN uniquement #}
        {% if is_granted('ROLE_ADMIN') %}
            <a class="nav-link" href="{{ path('admin_dashboard') }}">Dashboard</a>
            <a class="nav-link" href="{{ path('app_client_index') }}">Clients</a>
            <a class="nav-link" href="{{ path('app_order_index') }}">Orders</a>
            <a class="nav-link" href="{{ path('app_time_entry_index') }}">Time</a>
        {% endif %}

        {# Liens CLIENT uniquement #}
        {% if is_granted('ROLE_CLIENT') and not is_granted('ROLE_ADMIN') %}
            <a class="nav-link" href="{{ path('app_order_index') }}">My orders</a>
            {% set meClient = app.user and app.user.client ? app.user.client : null %}
            {% if meClient %}
            <a class="nav-link" href="{{ path('app_client_show', {'id': meClient.id}) }}">My profile</a>
            {% endif %}
        {% endif %}
        </div>

        <div class="ms-auto d-flex align-items-center gap-2">
        {% if app.user %}
            <span class="text-secondary small">üë§ {{ app.user.email }}</span>
            <a class="btn btn-sm btn-outline-light rounded-1" href="{{ path('app_logout') }}">Logout</a>
        {% else %}
            <a class="btn btn-sm btn-primary rounded-1" href="{{ path('app_login') }}">Login</a>
            <a class="btn btn-sm btn-outline-light rounded-1" href="{{ path('app_register') }}">Register</a>
        {% endif %}
        </div>
    </div>
    </nav>

    <main class="container-xxl py-4">
      <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index:1080;">
        {% for label, messages in app.flashes %}
            {% set tone = {
            'success':'success',
            'warning':'warning',
            'danger':'danger',
            'error':'danger',
            'info':'info'
            }[label]|default('secondary') %}

            {% for message in messages %}
            <div class="toast align-items-center text-bg-{{ tone }} border-0"
                role="alert" aria-live="assertive" aria-atomic="true"
                data-bs-autohide="true" data-bs-delay="6000">
                <div class="d-flex">
                <div class="toast-body">{{ message|raw }}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
            {% endfor %}
        {% endfor %}
        </div>

        <script>
        (function () {
        function showToasts() {
            document.querySelectorAll('.toast').forEach(function (el) {
            bootstrap.Toast.getOrCreateInstance(el).show();
            });
        }
        // Premier chargement
        document.addEventListener('DOMContentLoaded', showToasts);
        // Navigations Turbo
        document.addEventListener('turbo:load', showToasts);
        })();
        </script>
        <script>
          // Helper: cr√©er et afficher un toast programmatique
          window.showToast = function (message, tone = 'success') {
            const container = document.querySelector('.toast-container') || (() => {
              const c = document.createElement('div');
              c.className = 'toast-container position-fixed bottom-0 end-0 p-3';
              c.style.zIndex = 1080;
              document.body.appendChild(c);
              return c;
            })();

            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-bg-${tone} border-0`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            toast.dataset.bsAutohide = 'true';
            toast.dataset.bsDelay = '2000';
            toast.innerHTML = `
              <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>`;
            container.appendChild(toast);
            bootstrap.Toast.getOrCreateInstance(toast).show();
          };

          // Copie au clic pour tout √©l√©ment [data-copy]
          document.addEventListener('click', async (e) => {
            const el = e.target.closest('[data-copy]');
            if (!el) return;
            e.preventDefault();
            const text = el.getAttribute('data-copy') || '';
            try {
              await navigator.clipboard.writeText(text);
              showToast('Link copied to clipboard.', 'success');
            } catch {
              // Fallback
              const ta = Object.assign(document.createElement('textarea'), { value: text });
              ta.style.position = 'fixed';
              ta.style.opacity = '0';
              document.body.appendChild(ta);
              ta.select(); document.execCommand('copy'); ta.remove();
              showToast('Link copied to clipboard.', 'success');
            }
          });
        </script>


      {# --- Breadcrumbs (global) --- #}
      {% set crumbs = breadcrumbs(app.request) %}
      {% include 'partials/_breadcrumbs.html.twig' with { crumbs: crumbs } %}

      {% block body %}{% endblock %}
    </main>
  </body>
</html>
